package Analizadores;

import java_cup.runtime.Symbol;
import POJOS.Solicitud;
import POJOS.Usuario;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

parser code
{:
    private Symbol sym;
    
    public Solicitud temporal = new Solicitud();
    public Map<String,String> lista_temporal = new HashMap<>();
    public ArrayList<Solicitud> lista_solicitudes = new ArrayList<>();
    public Usuario logeado = new Usuario();
    public Usuario retorno = new Usuario();
    public String armando = "";

    public Symbol getS(){
        return this.sym;
    }

    public void agregarParametroAMap(String key, String valor){
        if (lista_temporal.containsKey(key)){
            temporal.setTieneErrores(true);
            temporal.setDescripcion_error(temporal.getDescripcion_error()+"Existe ya un parametro para "+key+" y se está intentando enviar otro: "+valor+"\n");
        } else {
            lista_temporal.put(key,valor);
        }
    }

    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal "+message+info);
    }
    public void report_fatal_error(Symbol cur) {
        System.out.println("unrecovered_syntax_error");
    }

    public void syntax_error(Symbol cur_token) {
        System.out.println(symbl_name_from_id(expected_token_ids().get(0)));
        System.out.println("syntaxerr: " + symbl_name_from_id(cur_token.sym) +" Linea: "+cur_token.right+" Columna: "+cur_token.left+" Valor:"+cur_token.value);
    }

    protected int error_sync_size() {
        return 1;
    }

:};

terminal COMILLAS, INICIOE, DOSP, FINE, MAYORQ, MENORQ, CREARU, USUARIOP, MODIFICARU, USUARIOAP, USUARIONP, NUEVOP,
    CONTRAP, FECHACP, FECHAMP, ELIMINARU, LOGINU, NUEVOFP, TITULO, ALINEA, BOOL,
    Parentesis_a, Parentesis_c, USUARIO, FECHA, IDP, TITULOP, NOMBREP, TEMAP, USUARIOCP, TEMA, ELIMINARF,
    LLAVEA, LLAVEC, CORCHETEA, CORCHETEC, SOLICITUDESP, FINSOLICITUDES, MODIFICARF, PARAMF, AGREGARC, NOMBREC,
    NUMERO, INICIOS, FINS, COMA, ID, URL, FORMULARIOC, CLASE, INDICEC, TEXTOVC, ALINEAC, REQUERIDO, OPCIONES, FILAS,
    COLUMNAS, URLC, ELIMINARC, PARAMC, MODIFICARC, CREDENCIALES, OR, CLASENORMAL, CLASEAREA, CLASEOPCIONES, CLASEIMAGEN, CLASEBOTON;

non terminal inicio, solicitud, bloque_usuario1, bloque_solicitudes, tipo_solicitud, inicio_param_usuario,
    parametro_usuario, parametros_crear, parametro_contra, parametro_fecha, parametro_login, bloque_usuario2, parametros_modificarU,
    parametro_usuario_antiguo, parametro_usuario_nuevo, parametro_contra_nueva, parametro_fecha_modificacion, inicio_param_formulario,
    bloque_formulario1, parametros_formulario, parametro_id, parametro_titulo, parametro_nombre, parametro_usuario_creacion,
    parametro_tema, bloque_formulario2, parametros_formulario2, inicio_param_componente, bloque_componente1, parametros_agregar,
    parametro_nombre_campo, parametro_formulario, parametro_clase, parametro_indice, parametro_texto, parametro_alineacion,
    parametro_requerido, parametro_opciones, bloque_opciones, parametro_filas, parametro_columnas, parametro_url, bloque_eliminar,
    bloque1, bloque2, bloque3, bloque4, bloque5, bloque6, bloque7, bloque8;

non terminal String tipo_palabra, tipo_opcion, tipos_de_clases;

start with inicio;

inicio::=
    INICIOE SOLICITUDESP MAYORQ bloque_solicitudes INICIOE FINSOLICITUDES MAYORQ
    | solicitud
;

bloque_solicitudes::=
    bloque_solicitudes solicitud
    | solicitud
;

solicitud::=
    INICIOE INICIOS DOSP COMILLAS tipo_solicitud MENORQ FINS FINE {:lista_solicitudes.add(temporal); temporal = new Solicitud();:}
;

tipo_solicitud::=
    CREARU inicio_param_usuario bloque1 CORCHETEC LLAVEC            {:temporal.setTipo("CREAR_USUARIO");  logeado = new Usuario();:}
    | MODIFICARU inicio_param_usuario bloque2 CORCHETEC LLAVEC      {:temporal.setTipo("MODIFICAR_USUARIO");:}
    | ELIMINARU inicio_param_usuario bloque3 CORCHETEC LLAVEC       {:temporal.setTipo("ELIMINAR_USUARIO");:}
    | LOGINU inicio_param_usuario LLAVEA parametro_login LLAVEC CORCHETEC LLAVEC {:retorno = logeado; logeado = new Usuario(); temporal.setTipo("LOGIN");:}
    | NUEVOFP inicio_param_formulario bloque4 CORCHETEC LLAVEC      {:temporal.setTipo("NUEVO_FORMULARIO");:}
    | ELIMINARF inicio_param_formulario bloque5 CORCHETEC LLAVEC    {:temporal.setTipo("ELIMINAR_FORMULARIO");:}
    | MODIFICARF inicio_param_formulario bloque6 CORCHETEC LLAVEC   {:temporal.setTipo("MODIFICAR_FORMULARIO");:}
    | AGREGARC inicio_param_componente bloque7 CORCHETEC LLAVEC     {:temporal.setTipo("AGREGAR_COMPONENTE");:}
    | ELIMINARC inicio_param_componente bloque8 CORCHETEC LLAVEC    {:temporal.setTipo("ELIMINAR_COMPONENTE");:}
    | MODIFICARC inicio_param_componente bloque7 CORCHETEC LLAVEC   {:temporal.setTipo("MODIFICAR_COMPONENTE");:}
;

bloque1::=
    bloque1 COMA LLAVEA bloque_usuario1 LLAVEC      {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA bloque_usuario1 LLAVEC                 {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

bloque2::=
    bloque2 COMA LLAVEA bloque_usuario2 LLAVEC      {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA bloque_usuario2 LLAVEC                 {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

bloque3::=
    bloque3 COMA LLAVEA parametro_usuario LLAVEC    {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA parametro_usuario LLAVEC               {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

bloque4::=
    bloque4 COMA LLAVEA bloque_formulario1 LLAVEC   {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA bloque_formulario1 LLAVEC              {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

bloque5::=
    bloque5 COMA LLAVEA parametro_id LLAVEC         {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA parametro_id LLAVEC                    {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

bloque6::=
    bloque6 COMA LLAVEA bloque_formulario2 LLAVEC   {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA bloque_formulario2 LLAVEC              {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

bloque7::=
    bloque7 COMA LLAVEA bloque_componente1 LLAVEC   {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA bloque_componente1 LLAVEC              {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

bloque8::=
    bloque8 COMA LLAVEA bloque_eliminar LLAVEC      {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
    | LLAVEA bloque_eliminar LLAVEC                 {:temporal.getCuantas().add(lista_temporal); lista_temporal = new HashMap<>(); temporal.setTieneErrores(false);:}
;

inicio_param_usuario::=
    COMILLAS MAYORQ LLAVEA COMILLAS CREDENCIALES COMILLAS DOSP CORCHETEA 
;

inicio_param_formulario::=
    COMILLAS MAYORQ LLAVEA COMILLAS PARAMF COMILLAS DOSP CORCHETEA 
;

inicio_param_componente::=
    COMILLAS MAYORQ LLAVEA COMILLAS PARAMC COMILLAS DOSP CORCHETEA 
;

bloque_eliminar::=
    parametro_id COMA parametro_formulario
    | parametro_formulario COMA parametro_id
;

bloque_componente1::=
    bloque_componente1 COMA parametros_agregar
    | parametros_agregar
;

parametros_agregar::=
    parametro_id
    | parametro_formulario
    | parametro_nombre_campo
    | parametro_clase
    | parametro_indice
    | parametro_texto
    | parametro_alineacion
    | parametro_opciones
    | parametro_requerido
    | parametro_filas
    | parametro_columnas
    | parametro_url
;

bloque_usuario1::=
    bloque_usuario1 COMA parametros_crear
    | parametros_crear
;

parametros_crear::=
    parametro_usuario {:System.out.println("encontrado parametro usuario");:}
    | parametro_contra  {:System.out.println("encontrado parametro contraseña");:}
    | parametro_fecha   {:System.out.println("encontrado parametro fecha");:}
;

bloque_usuario2::=
    bloque_usuario2 COMA parametros_modificarU
    | parametros_modificarU
;

parametros_modificarU::=
    parametro_usuario_antiguo
    | parametro_usuario_nuevo
    | parametro_contra_nueva
    | parametro_fecha_modificacion
;

bloque_formulario1::=
    bloque_formulario1 COMA parametros_formulario
    | parametros_formulario
;
    
parametros_formulario::=
    parametro_id
    | parametro_titulo
    | parametro_nombre
    | parametro_tema
    | parametro_usuario_creacion
    | parametro_fecha
;

bloque_formulario2::=
    bloque_formulario2 COMA parametros_formulario2
    | parametros_formulario2
;   

parametros_formulario2::=
    parametro_id
    | parametro_titulo
    | parametro_nombre
    | parametro_tema
    | parametro_usuario_creacion
    | parametro_fecha_modificacion
;

parametro_tema::=
    COMILLAS TEMAP COMILLAS DOSP COMILLAS TEMA:e1 COMILLAS                      {:agregarParametroAMap("TEMA",e1.toString()); :}
;

parametro_login::=
    parametro_usuario COMA parametro_contra
    | parametro_contra COMA parametro_usuario
;

parametro_usuario::=
    COMILLAS USUARIOP COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS {:agregarParametroAMap("USUARIO",e1.toString()); logeado.setUsuario(e1.toString());:}
;

parametro_usuario_creacion::=
    COMILLAS USUARIOCP COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS              {:agregarParametroAMap("USUARIO_CREACION",e1.toString()); :}
;

parametro_usuario_antiguo::=
    COMILLAS USUARIOAP COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS           {:agregarParametroAMap("USUARIO_ANTIGUO",e1.toString()); :}
;

parametro_usuario_nuevo::=
    COMILLAS USUARIONP COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS           {:agregarParametroAMap("USUARIO_NUEVO",e1.toString()); :}
;

parametro_contra::=
    COMILLAS CONTRAP COMILLAS DOSP COMILLAS tipo_palabra:e1 COMILLAS    {:agregarParametroAMap("CONTRA",e1.toString()); logeado.setPassword(e1.toString());:}
;

parametro_contra_nueva::=
    COMILLAS NUEVOP COMILLAS DOSP COMILLAS tipo_palabra:e1 COMILLAS     {:agregarParametroAMap("CONTRA_NUEVA",e1.toString());:}
;

parametro_fecha::=
    COMILLAS FECHACP COMILLAS DOSP COMILLAS FECHA:e1 COMILLAS {:agregarParametroAMap("FECHA",e1.toString());:}
;

parametro_fecha_modificacion::=
    COMILLAS FECHAMP COMILLAS DOSP COMILLAS FECHA:e1 COMILLAS {:agregarParametroAMap("FECHA_MODIFICACION",e1.toString());:}
;

parametro_id::=
    COMILLAS IDP COMILLAS DOSP COMILLAS ID:e1 COMILLAS {:agregarParametroAMap("ID",e1.toString());:}
;

parametro_titulo::=
    COMILLAS TITULOP COMILLAS DOSP COMILLAS tipo_opcion:e1 COMILLAS     {:agregarParametroAMap("TITULO",e1.toString());:}
;

parametro_nombre::=
    COMILLAS NOMBREP COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS         {:agregarParametroAMap("NOMBRE",e1.toString());:}
;

parametro_nombre_campo::=
    COMILLAS NOMBREC COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS         {:agregarParametroAMap("NOMBRE_CAMPO",e1.toString());:}
;

parametro_formulario::=
    COMILLAS FORMULARIOC COMILLAS DOSP COMILLAS ID:e1 COMILLAS             {:agregarParametroAMap("FORMULARIO",e1.toString());:}
;

tipos_de_clases::=
    CLASENORMAL:e1         {:RESULT = e1.toString();:}
    | CLASEAREA:e1         {:RESULT = e1.toString();:}
    | CLASEOPCIONES:e1     {:RESULT = e1.toString();:}
    | CLASEIMAGEN:e1       {:RESULT = e1.toString();:}
    | CLASEBOTON:e1        {:RESULT = e1.toString();:}
;

parametro_clase::=
    COMILLAS CLASE COMILLAS DOSP COMILLAS tipos_de_clases:e1 COMILLAS       {:agregarParametroAMap("CLASE",e1.toString());:}
;

parametro_indice::=
    COMILLAS INDICEC COMILLAS DOSP COMILLAS NUMERO:e1 COMILLAS              {:agregarParametroAMap("CLASE",e1.toString());:}
;

parametro_texto::=
    COMILLAS TEXTOVC COMILLAS DOSP COMILLAS tipo_opcion:e1 COMILLAS         {:agregarParametroAMap("TEXTO_VISIBLE",e1.toString());:}
;

parametro_alineacion::=
    COMILLAS ALINEAC COMILLAS DOSP COMILLAS ALINEA:e1 COMILLAS              {:agregarParametroAMap("ALINEACION",e1.toString());:}
;

parametro_requerido::=
    COMILLAS REQUERIDO COMILLAS DOSP COMILLAS BOOL:e1 COMILLAS              {:agregarParametroAMap("REQUERIDO",e1.toString());:}
;

parametro_opciones::=
    COMILLAS OPCIONES COMILLAS DOSP COMILLAS bloque_opciones COMILLAS       {:agregarParametroAMap("OPCIONES",armando); armando = "";:}
;

bloque_opciones::=
    bloque_opciones OR tipo_opcion:e1                                       {:armando += e1.toString()+"\n";:}
    | tipo_opcion:e1                                                        {:armando += e1.toString()+"\n";:}
;

tipo_opcion::=
    TITULO:e1       {:RESULT = e1.toString();:}
    | USUARIO:e1    {:RESULT = e1.toString();:}
    | ID:e1         {:RESULT = e1.toString();:}
    | NUMERO:e1     {:RESULT = e1.toString();:}
;

tipo_palabra::=
    USUARIO:e1 {:RESULT = e1.toString();:}
    | ID:e1 {:RESULT = e1.toString();:}
    | NUMERO:e1 {:RESULT = e1.toString();:}
;

parametro_filas::=
    COMILLAS FILAS COMILLAS DOSP COMILLAS NUMERO:e1 COMILLAS                {:agregarParametroAMap("FILAS",e1.toString());:}
;

parametro_columnas::=
    COMILLAS COLUMNAS COMILLAS DOSP COMILLAS NUMERO:e1 COMILLAS             {:agregarParametroAMap("COLUMNAS",e1.toString());:}
;

parametro_url::=
    COMILLAS URLC COMILLAS DOSP COMILLAS URL:e1 COMILLAS                    {:agregarParametroAMap("URL",e1.toString());:}
;