package Analizadores;

import java_cup.runtime.Symbol;
import POJOS.*;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

parser code
{:
    private Symbol sym;
    
    public ArrayList<Usuario> listado_usuarios = new ArrayList<>();
    public ArrayList<Formulario> listado_formularios = new ArrayList<>();
    public ArrayList<Formulario> listado_datos = new ArrayList<>();
    public ArrayList<Componente> listado_componentes = new ArrayList<>();

    public Usuario usuario_temporal = new Usuario();
    public Formulario form_temporal = new Formulario();
    public Formulario form_dato = new Formulario();
    public Registro reg_dato = new Registro();
    public Componente comp_temporal = new Componente();

    public Symbol getS(){
        return this.sym;
    }

    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal "+message+info);
    }
    public void report_fatal_error(Symbol cur) {
        System.out.println("unrecovered_syntax_error");
    }

    public void syntax_error(Symbol cur_token) {
        System.out.println(symbl_name_from_id(expected_token_ids().get(0)));
        System.out.println("syntaxerr: " + symbl_name_from_id(cur_token.sym) +" Linea: "+cur_token.right+" Columna: "+cur_token.left+" Valor:"+cur_token.value);
    }

    protected int error_sync_size() {
        return 1;
    }

:};

terminal COMILLAS, DOSP, FECHACP, TITULO, ALINEA, BOOL, OR, PARENTESISA, PARENTESISC, USUARIO, FECHA, IDF, IDC, TITULOP, NOMBREP, TEMAP, USUARIOCP, TEMA,
    LLAVEA, LLAVEC, NOMBREC, NUMERO, COMA, ID, URL, CLASE, INDICEC, TEXTOVC, ALINEAC, REQUERIDO, OPCIONES, FILAS, USUARIOP, CONTRAP, FECHAMP,
    COLUMNAS, URLC, CLASENORMAL, CLASEAREA, CLASEOPCIONES, CLASEIMAGEN, CLASEBOTON, INICIOFORM, INICIOUSUARIOS, COMPS, NOREGISTRO,
    INICIODATOS, VALOR, REGISTROS, INICIONEW;

non terminal inicio, bloque_forms, bloque_usuarios, parametros_form, parametro_id, parametro_titulo, parametro_nombre, parametro_tema, parametro_user_creacion, parametro_fecha_creacion,
    grupo_componentes, parametros_componentes, bloque_componentes, parametro_id_componente, parametro_nombre_campo, parametro_clase, parametro_indice,
    parametro_texto, parametro_alineacion, parametro_opciones, parametro_requerido, parametro_filas, parametro_columnas, parametro_url,
    tipo_ingreso, bloque_opciones, parametros_usuarios,
    parametro_usuario, parametro_password, bloque_param_compo, opcional_usuario, bloque_datos, bloque_datosP, lista_forms, bloque_registros, 
    bloque_registrosP, registro, bloque_valores, bloque_valoresP, bloque_dat;

non terminal String tipo_junto, tipos_de_clases;
non terminal Ingreso ingresado;

start with inicio;

inicio::=
    INICIOFORM PARENTESISA bloque_forms PARENTESISC
    | INICIOUSUARIOS PARENTESISA bloque_usuarios PARENTESISC
    | INICIODATOS PARENTESISA bloque_dat PARENTESISC
    | INICIONEW PARENTESISA bloque_forms PARENTESISC
;

bloque_forms::=
    bloque_forms COMA LLAVEA parametros_form LLAVEC {:listado_formularios.add(form_temporal); form_temporal = new Formulario();:}
    | LLAVEA parametros_form LLAVEC  {:listado_formularios.add(form_temporal); form_temporal = new Formulario();:}
;

bloque_usuarios::=
    bloque_usuarios COMA LLAVEA parametros_usuarios LLAVEC {:listado_usuarios.add(usuario_temporal); usuario_temporal = new Usuario();:}
    | LLAVEA parametros_usuarios LLAVEC {:listado_usuarios.add(usuario_temporal); usuario_temporal = new Usuario();:}
;

parametros_usuarios::=
    parametro_usuario COMA parametro_password COMA parametro_fecha_creacion opcional_usuario
;

opcional_usuario::=
    | COMA COMILLAS FECHAMP COMILLAS DOSP COMILLAS FECHA:e1 COMILLAS {:usuario_temporal.setFecha_mod(e1.toString());:}
;

parametro_usuario::=
    COMILLAS USUARIOP COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS {:usuario_temporal.setUsuario(e1.toString());:}
;

parametro_password::=
    COMILLAS CONTRAP COMILLAS DOSP COMILLAS tipo_junto:e1 COMILLAS {:usuario_temporal.setPassword(e1.toString());:}
;

parametros_form::=
    parametro_id COMA parametro_titulo COMA parametro_nombre COMA parametro_tema COMA parametro_user_creacion COMA parametro_fecha_creacion COMA grupo_componentes
;

parametro_id::=
    COMILLAS IDF COMILLAS DOSP COMILLAS ID:e1 COMILLAS {:form_temporal.setId(e1.toString());:}
;

parametro_user_creacion::=
    COMILLAS USUARIOCP COMILLAS DOSP COMILLAS USUARIO:e1 COMILLAS {:form_temporal.setUsuario(e1.toString());:}
;

parametro_fecha_creacion::=
    COMILLAS FECHACP COMILLAS DOSP COMILLAS FECHA:e1 COMILLAS {:usuario_temporal.setFecha(e1.toString()); form_temporal.setFecha(e1.toString());:}
;

parametro_titulo::=
    COMILLAS TITULOP COMILLAS DOSP COMILLAS tipo_ingreso:e1 COMILLAS {:form_temporal.setTitulo(e1.toString());:}
;

parametro_nombre::=
    COMILLAS NOMBREP COMILLAS DOSP COMILLAS tipo_junto:e1 COMILLAS {:form_temporal.setNombre(e1.toString());:}
;

parametro_tema::=
    COMILLAS TEMAP COMILLAS DOSP COMILLAS TEMA:e1 COMILLAS          {:form_temporal.setTema(e1.toString());:}
;

grupo_componentes::=
    COMILLAS COMPS COMILLAS DOSP PARENTESISA bloque_componentes PARENTESISC {:form_temporal.setComponentes(listado_componentes); listado_componentes = new ArrayList<>();:}
;

bloque_componentes::=
    | bloque_componentes COMA LLAVEA bloque_param_compo LLAVEC {:listado_componentes.add(comp_temporal); comp_temporal = new Componente();:}
    | LLAVEA bloque_param_compo LLAVEC                       {:listado_componentes.add(comp_temporal); comp_temporal = new Componente();:}
;

bloque_param_compo::=
    bloque_param_compo COMA parametros_componentes
    | parametros_componentes
;

parametros_componentes::=
    parametro_id_componente
    | parametro_nombre_campo
    | parametro_clase
    | parametro_indice
    | parametro_texto
    | parametro_alineacion
    | parametro_opciones
    | parametro_requerido
    | parametro_filas
    | parametro_columnas
    | parametro_url
;

tipo_junto::=
    USUARIO:e1 {:RESULT = e1.toString();:}
    | ID:e1 {:RESULT = e1.toString();:}
    | NUMERO:e1 {:RESULT = e1.toString();:}
;

parametro_id_componente::=
    COMILLAS IDC COMILLAS DOSP COMILLAS ID:e1 COMILLAS              {:comp_temporal.setId(e1.toString());:}
;

parametro_nombre_campo::=
    COMILLAS NOMBREC COMILLAS DOSP COMILLAS tipo_junto:e1 COMILLAS  {:comp_temporal.setNombre_campo(e1.toString());:}
;

tipos_de_clases::=
    CLASENORMAL:e1 {:RESULT = e1.toString();:}
    | CLASEAREA:e1 {:RESULT = e1.toString();:}
    | CLASEOPCIONES:e1 {:RESULT = e1.toString();:}
    | CLASEIMAGEN:e1 {:RESULT = e1.toString();:}
    | CLASEBOTON:e1 {:RESULT = e1.toString();:}
;

parametro_clase::=
    COMILLAS CLASE COMILLAS DOSP COMILLAS tipos_de_clases:e1 COMILLAS  {:comp_temporal.setClase(e1.toString());:}
;

parametro_indice::=
    COMILLAS INDICEC COMILLAS DOSP COMILLAS NUMERO:e1 COMILLAS          {:comp_temporal.setIndice(Integer.parseInt(e1.toString()));:}
;

parametro_texto::=
    COMILLAS TEXTOVC COMILLAS DOSP COMILLAS tipo_ingreso:e1 COMILLAS    {:comp_temporal.setTexto_visible(e1.toString());:}
;

parametro_alineacion::=
    COMILLAS ALINEAC COMILLAS DOSP COMILLAS ALINEA:e1 COMILLAS          {:comp_temporal.setAlineacion(e1.toString());:}
;

parametro_requerido::=
    COMILLAS REQUERIDO COMILLAS DOSP COMILLAS BOOL:e1 COMILLAS          {:comp_temporal.setRequerido(e1.toString());:}
;

parametro_opciones::=
    COMILLAS OPCIONES COMILLAS DOSP COMILLAS bloque_opciones COMILLAS
;

bloque_opciones::=
    bloque_opciones OR tipo_ingreso:e1                                  {:comp_temporal.getOpciones().add(e1.toString());:}                        
    | tipo_ingreso:e1                                                   {:comp_temporal.getOpciones().add(e1.toString());:}
;

parametro_filas::=
    COMILLAS FILAS COMILLAS DOSP COMILLAS NUMERO:e1 COMILLAS            {:comp_temporal.setFilas(Integer.parseInt(e1.toString()));:}
;

parametro_columnas::=
    COMILLAS COLUMNAS COMILLAS DOSP COMILLAS NUMERO:e1 COMILLAS         {:comp_temporal.setColumnas(Integer.parseInt(e1.toString()));:}
;

parametro_url::=
    COMILLAS URLC COMILLAS DOSP COMILLAS URL:e1 COMILLAS                {:comp_temporal.setUrl(e1.toString());:}
;

tipo_ingreso::=
    ID:e1 {:RESULT = e1.toString();:}
    | USUARIO:e1 {:RESULT = e1.toString();:}
    | TITULO:e1 {:RESULT = e1.toString();:}
    | FECHA:e1 {:RESULT = e1.toString();:}
    | NUMERO:e1 {:RESULT = e1.toString();:}
;

bloque_dat::=
    | bloque_datos
;

bloque_datos::=
    LLAVEA lista_forms LLAVEC bloque_datosP
;

bloque_datosP::=
    | COMA bloque_datos
;

lista_forms::=
    COMILLAS IDF COMILLAS DOSP COMILLAS ID:e1 COMILLAS COMA COMILLAS NOMBREP COMILLAS DOSP COMILLAS USUARIO:e2 COMILLAS COMA COMILLAS REGISTROS COMILLAS DOSP PARENTESISA bloque_registros PARENTESISC {: form_dato.setId(e1.toString()); form_dato.setNombre(e2.toString()); listado_datos.add(form_dato); form_dato = new Formulario();:}
;
bloque_registros::=
    LLAVEA registro LLAVEC bloque_registrosP
;

bloque_registrosP::=
    | COMA bloque_registros
;

registro::=
    COMILLAS NOREGISTRO:e1 COMILLAS DOSP PARENTESISA bloque_valores PARENTESISC {: reg_dato.setNoregistro(e1.toString()); form_dato.getRegistros().add(reg_dato); reg_dato = new Registro(); :}
;

bloque_valores::=
    LLAVEA ingresado:e1 LLAVEC bloque_valoresP {: reg_dato.getValores().add(e1);:}
;

bloque_valoresP::=
    | COMA bloque_valores
;

ingresado::=
    COMILLAS IDC COMILLAS DOSP COMILLAS ID:id1 COMILLAS COMA COMILLAS NOMBREC COMILLAS DOSP COMILLAS USUARIO:nombre1 COMILLAS COMA COMILLAS VALOR COMILLAS DOSP COMILLAS tipo_ingreso:in1 COMILLAS {: Ingreso nuevo = new Ingreso(); nuevo.setIdc(id1.toString()); nuevo.setNombrec(nombre1.toString()); nuevo.setDato(in1.toString()); RESULT = nuevo; :}
;