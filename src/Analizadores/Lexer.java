// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: src/Analizadores/Lexer.flex

package Analizadores;
import java_cup.runtime.Symbol;

// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
public class Lexer implements java_cup.runtime.Scanner {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0, 0
  };

  /**
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
     0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  2,  3,  3,  2,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     4,  5,  6,  7,  8,  7,  7,  0,  9, 10,  0,  0, 11, 12, 13, 14, 
    15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 17, 18,  0, 19,  7, 
     0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
    35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,  0, 47,  0, 48, 
     0, 49, 50, 51, 52, 53, 54, 44, 55, 56, 44, 57, 58, 59, 60, 61, 
    62, 44, 63, 64, 65, 66, 44, 67, 44, 44, 44, 68, 69, 70,  0,  0, 
     0,  0,  0,  0,  0,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  7, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 
     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0
  };

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\0\1\2\1\3\1\4\1\5\1\6"+
    "\1\7\1\4\1\0\1\10\1\11\1\12\1\13\1\14"+
    "\23\15\1\16\1\17\1\4\6\15\1\20\1\21\1\22"+
    "\1\23\1\1\1\24\1\3\1\10\1\25\1\15\1\0"+
    "\21\15\1\26\6\15\1\27\5\15\1\27\5\15\1\4"+
    "\6\15\1\3\1\10\1\0\43\15\1\30\10\15\1\10"+
    "\1\0\3\15\1\31\33\15\1\32\6\15\1\3\1\0"+
    "\3\15\1\33\3\15\1\34\1\15\1\35\6\15\1\36"+
    "\23\15\1\3\1\0\4\15\1\37\11\15\1\40\1\41"+
    "\4\15\1\42\6\15\1\43\2\15\1\0\1\15\1\3"+
    "\1\0\30\15\1\44\1\15\1\0\1\15\1\45\1\46"+
    "\4\15\1\47\14\15\1\50\1\15\1\51\4\15\1\0"+
    "\22\15\1\52\5\15\1\0\2\15\1\53\1\54\7\15"+
    "\1\55\56\15\1\56\13\15\1\57\6\15\1\60\7\15"+
    "\1\61\2\15\1\62\1\63\1\64\5\15\1\65\5\15"+
    "\1\66\22\15\1\67\1\15\1\70\1\71\4\15\1\72"+
    "\4\15\1\73\2\15\1\74\7\15\1\75\2\15\1\76"+
    "\3\15\1\77\5\15\1\100\1\101\4\15\1\102\1\103"+
    "\1\104\2\15\1\105\1\106";

  private static int [] zzUnpackAction() {
    int [] result = new int[510];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\107\0\216\0\325\0\u011c\0\u0163\0\u011c\0\u011c"+
    "\0\325\0\u01aa\0\u01f1\0\u0238\0\325\0\325\0\u027f\0\325"+
    "\0\u02c6\0\u030d\0\u0354\0\u039b\0\u03e2\0\u0429\0\u0470\0\u04b7"+
    "\0\u04fe\0\u0545\0\u058c\0\u05d3\0\u061a\0\u0661\0\u06a8\0\u06ef"+
    "\0\u0736\0\u077d\0\u07c4\0\325\0\325\0\u080b\0\u0852\0\u0899"+
    "\0\u08e0\0\u0927\0\u096e\0\u09b5\0\325\0\u09fc\0\325\0\325"+
    "\0\u0a43\0\u0a8a\0\u0ad1\0\u0b18\0\325\0\u0b5f\0\u0ba6\0\u0bed"+
    "\0\u0c34\0\u0c7b\0\u0cc2\0\u0d09\0\u0d50\0\u0d97\0\u0dde\0\u0e25"+
    "\0\u0e6c\0\u0eb3\0\u0efa\0\u0f41\0\u0f88\0\u0fcf\0\u1016\0\u105d"+
    "\0\u0470\0\u10a4\0\u10eb\0\u1132\0\u1179\0\u11c0\0\u1207\0\u124e"+
    "\0\u1295\0\u12dc\0\u1323\0\u136a\0\u13b1\0\u0470\0\u13f8\0\u143f"+
    "\0\u1486\0\u14cd\0\u1514\0\u155b\0\u15a2\0\u15e9\0\u1630\0\u1677"+
    "\0\u16be\0\u1705\0\u09fc\0\u174c\0\u1793\0\u17da\0\u1821\0\u1868"+
    "\0\u18af\0\u18f6\0\u193d\0\u1984\0\u19cb\0\u1a12\0\u1a59\0\u1aa0"+
    "\0\u1ae7\0\u1b2e\0\u1b75\0\u1bbc\0\u1c03\0\u1c4a\0\u1c91\0\u1cd8"+
    "\0\u1d1f\0\u1d66\0\u1dad\0\u1df4\0\u1e3b\0\u1e82\0\u1ec9\0\u1f10"+
    "\0\u1f57\0\u1f9e\0\u1fe5\0\u202c\0\u2073\0\u20ba\0\u2101\0\u2148"+
    "\0\u0470\0\u218f\0\u21d6\0\u221d\0\u2264\0\u22ab\0\u22f2\0\u2339"+
    "\0\u2380\0\u23c7\0\u240e\0\u2455\0\u249c\0\u24e3\0\u0470\0\u252a"+
    "\0\u2571\0\u25b8\0\u25ff\0\u2646\0\u268d\0\u26d4\0\u271b\0\u2762"+
    "\0\u27a9\0\u27f0\0\u2837\0\u287e\0\u28c5\0\u290c\0\u2953\0\u299a"+
    "\0\u29e1\0\u2a28\0\u2a6f\0\u2ab6\0\u2afd\0\u2b44\0\u2b8b\0\u2bd2"+
    "\0\u2c19\0\u2c60\0\u0470\0\u2ca7\0\u2cee\0\u2d35\0\u2d7c\0\u2dc3"+
    "\0\u2e0a\0\u2e51\0\u2e98\0\u2edf\0\u2f26\0\u2f6d\0\u0470\0\u2fb4"+
    "\0\u2ffb\0\u3042\0\u0470\0\u3089\0\u0470\0\u30d0\0\u3117\0\u315e"+
    "\0\u31a5\0\u31ec\0\u3233\0\u0470\0\u327a\0\u32c1\0\u3308\0\u334f"+
    "\0\u3396\0\u33dd\0\u3424\0\u346b\0\u34b2\0\u34f9\0\u3540\0\u3587"+
    "\0\u35ce\0\u3615\0\u365c\0\u36a3\0\u36ea\0\u3731\0\u3778\0\u37bf"+
    "\0\u3806\0\u384d\0\u3894\0\u38db\0\u3922\0\u0470\0\u3969\0\u39b0"+
    "\0\u39f7\0\u3a3e\0\u3a85\0\u3acc\0\u3b13\0\u3b5a\0\u3ba1\0\u0470"+
    "\0\u0470\0\u3be8\0\u3c2f\0\u3c76\0\u3cbd\0\u3d04\0\u3d4b\0\u3d92"+
    "\0\u3dd9\0\u3e20\0\u3e67\0\u3eae\0\u0470\0\u3ef5\0\u3f3c\0\u3f83"+
    "\0\u3fca\0\u4011\0\u4058\0\u409f\0\u40e6\0\u412d\0\u4174\0\u41bb"+
    "\0\u4202\0\u4249\0\u4290\0\u42d7\0\u431e\0\u4365\0\u43ac\0\u43f3"+
    "\0\u443a\0\u4481\0\u44c8\0\u450f\0\u4556\0\u459d\0\u45e4\0\u462b"+
    "\0\u4672\0\u46b9\0\u4700\0\u4747\0\u478e\0\u47d5\0\u481c\0\u4011"+
    "\0\u4863\0\u48aa\0\u48f1\0\u4938\0\u497f\0\u0470\0\u49c6\0\u4a0d"+
    "\0\u4a54\0\u4a9b\0\u4ae2\0\u4b29\0\u4b70\0\u4bb7\0\u4bfe\0\u4c45"+
    "\0\u4c8c\0\u4cd3\0\u0470\0\u4d1a\0\u0470\0\u4d61\0\u4da8\0\u4def"+
    "\0\u4e36\0\u4e7d\0\u4ec4\0\u4f0b\0\u4f52\0\u4f99\0\u4fe0\0\u5027"+
    "\0\u506e\0\u50b5\0\u50fc\0\u5143\0\u518a\0\u51d1\0\u5218\0\u525f"+
    "\0\u52a6\0\u52ed\0\u5334\0\u537b\0\u0470\0\u53c2\0\u5409\0\u5450"+
    "\0\u5497\0\u54de\0\u5525\0\u556c\0\u55b3\0\u0470\0\u0470\0\u55fa"+
    "\0\u5641\0\u5688\0\u56cf\0\u5716\0\u575d\0\u57a4\0\u0470\0\u57eb"+
    "\0\u5832\0\u5879\0\u58c0\0\u5907\0\u594e\0\u5995\0\u59dc\0\u5a23"+
    "\0\u5a6a\0\u5ab1\0\u5af8\0\u5b3f\0\u5b86\0\u5bcd\0\u5c14\0\u5c5b"+
    "\0\u5ca2\0\u5ce9\0\u5d30\0\u5d77\0\u5dbe\0\u5e05\0\u5e4c\0\u5e93"+
    "\0\u5eda\0\u5f21\0\u5f68\0\u5faf\0\u5ff6\0\u603d\0\u6084\0\u60cb"+
    "\0\u6112\0\u6159\0\u61a0\0\u61e7\0\u622e\0\u6275\0\u62bc\0\u6303"+
    "\0\u634a\0\u6391\0\u63d8\0\u641f\0\u6466\0\u0470\0\u64ad\0\u64f4"+
    "\0\u653b\0\u6582\0\u65c9\0\u6610\0\u6657\0\u669e\0\u66e5\0\u672c"+
    "\0\u6773\0\u0470\0\u67ba\0\u6801\0\u6848\0\u688f\0\u68d6\0\u691d"+
    "\0\u0470\0\u6964\0\u69ab\0\u69f2\0\u6a39\0\u6a80\0\u6ac7\0\u6b0e"+
    "\0\u0470\0\u6b55\0\u6b9c\0\u0470\0\u6be3\0\u6c2a\0\u6c71\0\u6cb8"+
    "\0\u6cff\0\u6d46\0\u6d8d\0\u0470\0\u6dd4\0\u6e1b\0\u6e62\0\u6ea9"+
    "\0\u6ef0\0\u0470\0\u6f37\0\u6f7e\0\u6fc5\0\u700c\0\u7053\0\u709a"+
    "\0\u70e1\0\u7128\0\u716f\0\u71b6\0\u71fd\0\u7244\0\u728b\0\u72d2"+
    "\0\u7319\0\u7360\0\u73a7\0\u73ee\0\u0470\0\u7435\0\u0470\0\u0470"+
    "\0\u747c\0\u74c3\0\u750a\0\u7551\0\u0470\0\u7598\0\u75df\0\u7626"+
    "\0\u766d\0\u0470\0\u76b4\0\u76fb\0\u0470\0\u7742\0\u7789\0\u77d0"+
    "\0\u7817\0\u785e\0\u78a5\0\u78ec\0\u0470\0\u7933\0\u797a\0\u0470"+
    "\0\u79c1\0\u7a08\0\u7a4f\0\u0470\0\u7a96\0\u7add\0\u7b24\0\u7b6b"+
    "\0\u7bb2\0\u0470\0\u0470\0\u7bf9\0\u7c40\0\u7c87\0\u7cce\0\u0470"+
    "\0\u0470\0\u0470\0\u7d15\0\u7d5c\0\u0470\0\u0470";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[510];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\0\2\2\1\0\1\2\1\3\1\4\1\5\1\6"+
    "\1\7\1\10\1\11\1\12\1\0\1\13\1\14\1\15"+
    "\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25"+
    "\1\26\2\27\1\30\1\31\1\27\1\32\1\33\1\34"+
    "\1\35\1\36\1\27\1\37\1\40\1\41\1\42\1\27"+
    "\1\43\3\27\1\44\1\45\1\46\1\27\1\47\1\27"+
    "\1\50\1\27\1\51\1\52\1\53\12\27\1\54\1\55"+
    "\1\56\1\57\1\0\2\2\1\0\1\2\100\0\1\2"+
    "\24\0\1\60\201\0\1\5\1\0\2\5\1\0\1\5"+
    "\2\0\1\5\4\0\32\5\2\0\24\5\1\0\1\5"+
    "\11\0\1\6\3\0\1\6\2\0\1\6\4\0\32\6"+
    "\2\0\24\6\12\0\1\5\1\6\2\5\1\0\1\12"+
    "\2\0\1\12\4\0\32\12\2\0\24\12\1\0\1\5"+
    "\17\0\1\61\74\0\1\62\2\0\1\63\1\0\2\63"+
    "\1\0\1\63\2\0\1\64\4\0\32\63\2\0\24\63"+
    "\1\0\1\63\6\0\1\65\105\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\6\27\1\70\4\27\1\71\5\27\1\72\10\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\13\27"+
    "\1\73\2\27\1\74\13\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\1\75\3\27\1\76\2\27"+
    "\1\77\3\27\1\100\2\27\1\101\2\27\1\102\10\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\1\103\3\27\1\104\25\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\13\27\1\105\16\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\4\27"+
    "\1\106\3\27\1\107\5\27\1\110\13\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\3\27"+
    "\1\111\10\27\1\112\1\113\13\27\1\114\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\24\27\1\115"+
    "\5\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\16\27\1\116\13\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\16\27\1\117\13\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\16\27"+
    "\1\120\5\27\1\121\5\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\17\27\1\122\12\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\1\123"+
    "\31\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\124\3\27\1\125\25\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\10\27\1\126\21\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\4\27\1\127\3\27\1\130\21\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\21\27\1\131\1\132"+
    "\7\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\7\27\1\133\22\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\6\2\66\1\0\1\134"+
    "\1\67\1\0\1\134\4\0\32\46\2\0\24\46\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\32\27\2\0\12\27"+
    "\1\135\11\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\32\27\2\0\1\27\1\136\22\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\32\27\2\0\10\27\1\137\13\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\21\27\1\140\2\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\14\27\1\141\7\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\32\27\2\0\7\27\1\142"+
    "\14\27\1\0\1\66\2\0\2\2\1\0\1\2\2\0"+
    "\1\5\1\0\2\5\1\0\1\5\2\0\1\5\4\0"+
    "\32\5\2\0\24\5\1\0\1\143\1\0\2\61\2\0"+
    "\103\61\4\0\1\62\2\0\1\62\1\0\2\62\1\0"+
    "\1\62\2\0\1\62\4\0\32\62\2\0\24\62\1\0"+
    "\1\62\5\0\1\62\2\0\1\63\1\0\2\63\1\0"+
    "\1\63\2\0\1\63\4\0\32\63\2\0\24\63\1\0"+
    "\1\63\5\0\1\62\2\0\1\63\1\0\2\63\1\0"+
    "\1\63\2\0\1\144\4\0\32\63\2\0\24\63\1\0"+
    "\1\63\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\2\0\1\66\4\0\32\66\2\0\24\66\1\0"+
    "\1\66\25\0\32\145\2\0\24\145\7\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\21\27\1\146\10\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\10\27\1\147\21\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\4\27"+
    "\1\150\25\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\24\27\1\151\5\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\23\27\1\152\6\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\14\27\1\153\15\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\15\27\1\154\14\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\4\27\1\155"+
    "\25\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\156\31\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\13\27\1\157\1\160\15\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\4\27"+
    "\1\161\25\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\21\27\1\162\10\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\21\27\1\163\10\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\10\27\1\164\21\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\2\27\1\165\27\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\2\27\1\166"+
    "\10\27\1\167\16\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\170\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\1\171\31\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\3\27\1\172\26\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\20\27\1\173\11\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\22\27\1\174"+
    "\7\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\6\27\1\175\23\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\3\27\1\176\26\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\14\27"+
    "\1\177\15\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\4\27\1\200\25\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\2\27\1\201\27\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\21\27\1\202\1\203\7\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\3\27\1\204\26\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\20\27"+
    "\1\205\11\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\14\27\1\206\12\27\1\207\2\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\23\27"+
    "\1\210\6\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\13\27\1\211\16\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\24\27\1\212\5\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\10\27\1\213\21\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\6\2\66\1\0\1\134\2\0"+
    "\1\134\4\0\32\134\2\0\24\134\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\32\27\2\0\22\27\1\214\1\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\17\27\1\215\4\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\14\27\1\216\7\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\32\27\2\0\21\27\1\217"+
    "\2\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\32\27"+
    "\2\0\10\27\1\220\13\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\32\27\2\0\10\27\1\221\13\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\63\1\0\2\63\1\0"+
    "\1\63\2\0\1\222\4\0\32\63\2\0\24\63\1\0"+
    "\1\63\16\0\1\223\6\0\32\145\2\0\24\145\7\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\4\27\1\224\25\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\15\27\1\225"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\226\31\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\4\27\1\227\25\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\16\27\1\230"+
    "\13\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\17\27\1\231\12\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\23\27\1\232\6\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\2\27"+
    "\1\233\27\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\22\27\1\234\7\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\24\27\1\235\5\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\1\27\1\236\30\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\1\237\2\27\1\240\26\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\12\27"+
    "\1\227\17\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\4\27\1\241\25\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\14\27\1\242\15\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\7\27\1\243\22\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\7\27\1\244\22\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\1\245\31\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\14\27\1\246\15\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\6\27\1\247\23\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\10\27\1\250"+
    "\21\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\24\27\1\251\5\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\23\27\1\252\6\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\10\27"+
    "\1\253\21\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\10\27\1\254\21\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\1\27\1\255\30\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\25\27\1\256\4\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\10\27\1\257\21\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\1\260\31\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\22\27\1\261\7\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\10\27\1\236\21\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\24\27\1\262"+
    "\5\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\263\31\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\23\27\1\264\6\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\24\27\1\265"+
    "\5\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\266\31\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\23\27\1\151\6\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\5\27\1\227\16\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\11\27\1\227\12\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\32\27\2\0\1\267\23\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\16\27\1\270\5\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\1\271\23\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\32\27\2\0\21\27\1\214\2\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\63\1\0\2\63"+
    "\1\0\1\272\2\0\1\222\4\0\32\63\2\0\24\63"+
    "\1\0\1\63\64\0\1\273\27\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\6\27\1\274\23\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\4\27\1\275\25\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\1\276\23\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\15\27\1\277\14\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\16\27\1\300\13\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\21\27\1\301"+
    "\10\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\12\27\1\302\17\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\4\27\1\303\25\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\14\27"+
    "\1\304\15\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\16\27\1\305\13\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\21\27\1\306\10\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\4\27\1\307\25\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\2\27\1\310\27\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\10\27\1\311"+
    "\21\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\312\31\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\4\27\1\313\25\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\22\27\1\314"+
    "\7\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\24\27\1\315\5\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\4\27\1\316\25\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\2\27"+
    "\1\317\27\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\10\27\1\320\21\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\10\27\1\321\21\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\15\27\1\322\14\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\5\27\1\323\24\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\21\27\1\324"+
    "\10\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\16\27\1\325\13\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\16\27\1\326\13\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\14\27"+
    "\1\327\15\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\26\27\1\330\3\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\4\27\1\331\25\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\16\27\1\332\13\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\13\27\1\333\16\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\21\27\1\334"+
    "\10\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\20\27\1\335\3\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\32\27\2\0\20\27\1\336"+
    "\3\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\32\27"+
    "\2\0\20\27\1\337\3\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\63\1\0\2\63\1\0\1\63\2\0\1\340"+
    "\4\0\32\63\2\0\24\63\1\0\1\63\76\0\1\341"+
    "\15\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\1\342\31\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\1\343\31\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\23\27\1\344\6\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\32\27\2\0\1\345\23\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\346\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\1\27\1\347\30\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\15\27\1\350\14\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\1\351\23\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\15\27\1\352\14\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\7\27\1\353\22\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\15\27\1\354"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\1\355\23\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\356\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\13\27\1\357"+
    "\16\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\15\27\1\360\14\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\4\27\1\361\25\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\4\27"+
    "\1\362\25\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\5\27\1\363\24\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\32\27\2\0\1\364"+
    "\23\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\10\27"+
    "\1\365\21\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\4\27\1\366\25\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\32\27\2\0\1\367"+
    "\23\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\15\27"+
    "\1\370\14\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\4\27\1\371\25\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\372\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\21\27\1\373\10\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\32\27\2\0\1\374\23\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\375\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\10\27\1\376\21\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\32\27\2\0\15\27\1\377\6\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\1\u0100\3\0\32\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\32\27\2\0\15\27\1\u0101\6\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\63\1\0\2\63\1\0\1\u0102\2\0"+
    "\1\340\4\0\32\63\2\0\24\63\1\0\1\63\74\0"+
    "\1\u0103\17\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\21\27\1\u0104\10\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\2\27\1\u0105\27\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\4\27\1\u0106\25\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\23\27\1\u0107"+
    "\6\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\16\27\1\u0108\13\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\1\u0109\31\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\24\27\1\u010a"+
    "\5\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\2\27\1\u010b\27\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\1\346\31\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\1\u010c\31\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\2\27\1\u010d\11\27\1\u010e\15\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\277\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\1\u010f\31\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\21\27\1\u0110\10\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\10\27\1\u0111\21\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\24\27\1\u0112\5\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\2\27\1\u0113\27\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\1\u0114\23\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\5\27\1\u0115\11\27\1\u0116\12\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\4\27\1\u0117\25\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\23\27\1\u0118\6\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\u0119\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\10\27\1\u011a"+
    "\21\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\25\27\1\u011b\4\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\16\27\1\u011c\13\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\32\27"+
    "\2\0\12\27\1\u011d\11\27\1\0\1\66\17\0\1\u011e"+
    "\74\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\32\27\2\0\12\27\1\u011f"+
    "\11\27\1\0\1\66\5\0\1\62\2\0\1\63\1\0"+
    "\2\63\1\0\1\63\2\0\1\u0120\4\0\32\63\2\0"+
    "\24\63\1\0\1\63\17\0\1\u0121\74\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\1\u0122\23\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\10\27\1\u0123\21\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\27\27\1\u0124"+
    "\2\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\4\27\1\u0125\25\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\27\27\1\305\2\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\22\27"+
    "\1\u0126\7\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\22\27\1\u0127\7\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\10\27\1\u0128\21\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\21\27\1\u0129\10\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\u012a\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\16\27\1\u012b"+
    "\13\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\21\27\1\u012c\10\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\3\27\1\353\26\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\2\27"+
    "\1\u012d\27\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\22\27\1\u012e\7\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\1\u012f\31\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\2\27"+
    "\1\u0130\27\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\16\27\1\u0131\13\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\1\u0132\31\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\22\27"+
    "\1\u0133\7\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\21\27\1\u0134\10\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\3\27\1\u0135\26\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\3\27\1\u0136\26\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\10\27\1\u0137\21\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\1\u0138\23\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\32\27\2\0\10\27\1\u0139\13\27\1\0\1\66\17\0"+
    "\1\u013a\74\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\32\27\2\0\10\27"+
    "\1\u013b\13\27\1\0\1\66\10\0\1\u0121\1\0\2\u0121"+
    "\1\0\1\u0121\1\0\2\u0121\4\0\32\u0121\2\0\24\u0121"+
    "\1\0\1\u0121\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\2\27\1\u013c"+
    "\27\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\16\27\1\u013d\13\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\23\27\1\u013e\6\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\27\27"+
    "\1\u013f\2\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\24\27\1\u0140\5\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\1\u0141\31\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\32\27"+
    "\2\0\1\u0142\23\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\4\27\1\u0143\25\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\3\27\1\u0144\26\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\10\27"+
    "\1\u0145\21\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\1\u0146\31\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\24\27\1\u0147\5\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\21\27"+
    "\1\u0148\10\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\1\u0149\31\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\21\27\1\u014a\10\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\22\27"+
    "\1\u014b\7\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\16\27\1\u014c\13\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\u014d\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\22\27\1\u014e\7\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\1\u014f\1\27\1\u0150\12\27\1\u0151"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\3\27\1\u0152\20\27\1\0\1\66"+
    "\25\0\32\u0153\2\0\24\u0153\7\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\32\27\2\0\3\27\1\u0154\20\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\16\27\1\u0155\13\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\15\27\1\u0156"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\16\27\1\u0157\13\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\23\27\1\356\6\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\1\u0158"+
    "\31\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\13\27\1\u0159\16\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\2\27\1\u015a\2\27\1\u015b"+
    "\16\27\1\u015c\5\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\1\u015d\31\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\10\27\1\u015e\21\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\16\27\1\u015f\13\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\346\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\1\u0160\31\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\32\27\2\0\1\u0161\23\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\14\27\1\u0162\15\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\14\27\1\u0163\15\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\22\27\1\u0164\7\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\22\27\1\u0165\7\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\10\27\1\u0166"+
    "\21\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\15\27\1\u0167\14\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\21\27\1\u0168\10\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\24\27"+
    "\1\u0169\5\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\32\27\2\0\10\27\1\u016a\13\27\1\0"+
    "\1\66\16\0\1\67\6\0\32\u0153\2\0\24\u0153\7\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\32\27\2\0\10\27\1\u016b\13\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\14\27\1\u016c"+
    "\15\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\21\27\1\u016d\10\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\4\27\1\u016e\25\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\16\27"+
    "\1\u016f\13\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\16\27\1\u0170\13\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\22\27\1\u0171\7\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\2\27\1\u0172\27\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\5\27\1\u0173\24\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\21\27\1\u0174"+
    "\10\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\2\27\1\u0175\2\27\1\u0176\16\27\1\u0177\5\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\17\27\1\u0178\12\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\24\27\1\u0179\5\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\26\27\1\u017a"+
    "\3\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\1\u017b\23\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\1\27\1\u017c\30\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\23\27\1\u017d"+
    "\6\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\4\27\1\u017e\25\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\4\27\1\u017f\25\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\32\27"+
    "\2\0\21\27\1\u0180\2\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\32\27\2\0\21\27\1\u0181\2\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\17\27\1\u0182\12\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\10\27\1\u0183\21\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\22\27\1\u0184\7\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\14\27\1\u0185"+
    "\15\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\21\27\1\u0186\10\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\24\27\1\u0187\5\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\10\27"+
    "\1\u0188\21\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\10\27\1\u0189\21\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\10\27\1\u018a\21\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\16\27\1\u018b\13\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\16\27\1\u018c\13\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\22\27\1\u018d"+
    "\7\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\16\27\1\u018e\13\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\13\27\1\u018f\16\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\16\27"+
    "\1\u0190\13\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\2\27\1\u0191\2\27\1\u0192\24\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\13\27"+
    "\1\u0193\16\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\10\27\1\u0194\21\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\1\u0195\31\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\25\27"+
    "\1\u0196\4\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\32\27\2\0\22\27\1\u0197\1\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\32\27\2\0\22\27"+
    "\1\u0198\1\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\16\27\1\u0199\13\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\16\27\1\u019a\13\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\32\27\2\0"+
    "\1\u019b\23\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\17\27\1\u019c\12\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\14\27\1\u019d\15\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\1\u019e\31\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\16\27\1\u019f\13\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\2\27\1\u01a0\27\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\16\27\1\u01a1"+
    "\13\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\14\27\1\u01a2\15\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\21\27\1\u01a3\10\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\24\27"+
    "\1\u01a4\5\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\1\u01a5\31\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\21\27\1\u01a6\10\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\16\27"+
    "\1\u01a7\13\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\16\27\1\u01a8\13\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\4\27\1\u01a9\25\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\6\27\1\u01aa\23\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\2\27\1\u01ab\27\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\16\27\1\u01ac"+
    "\13\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\32\27\2\0\4\27\1\u01ad\17\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\32\27\2\0\4\27\1\u01ae"+
    "\17\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\15\27"+
    "\1\u01af\14\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\24\27\1\u01b0\5\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\u01b1\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\24\27\1\u01b2\5\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\u01b3\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\15\27\1\u01b4"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\u01b5\31\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\17\27\1\u01b6\12\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\14\27\1\u01b7"+
    "\15\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\1\u01b8\31\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\u01b9\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\3\27\1\u01ba"+
    "\26\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\14\27\1\u01bb\15\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\21\27\1\u01bc\10\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\24\27"+
    "\1\u01bd\5\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\10\27\1\u01be\21\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\32\27\2\0\5\27"+
    "\1\u01bf\16\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\32\27\2\0\5\27\1\u01c0\16\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\4\27\1\u01c1\25\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\22\27\1\u01c2"+
    "\7\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\15\27\1\u01c3\14\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\13\27\1\u01c4\16\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\10\27"+
    "\1\u01c5\21\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\2\27\1\u01c6\27\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\u01c7\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\24\27\1\u01c8\5\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\21\27\1\u01c9\10\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\10\27\1\u01ca"+
    "\21\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\17\27\1\u01cb\12\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\14\27\1\u01cc\15\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\16\27"+
    "\1\u01cd\13\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\16\27\1\u01ce\13\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\32\27\2\0\20\27"+
    "\1\u01cf\3\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\32\27\2\0\20\27\1\u01d0\3\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\15\27\1\u01d1\14\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\24\27\1\u01d2"+
    "\5\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\4\27\1\u01d3\25\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\1\u01d4\31\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\16\27\1\u01d5"+
    "\13\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\10\27\1\u01d6\21\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\15\27\1\u01d7\14\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\13\27"+
    "\1\u01d8\16\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\10\27\1\u01d9\21\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\u01da\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\16\27\1\u01db\13\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\24\27\1\u01dc\5\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\15\27\1\u01dd"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\23\27\1\u01de\6\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\1\u01df\31\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\15\27\1\u01e0"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\21\27\1\u01e1\10\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\16\27\1\u01e2\13\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\4\27"+
    "\1\u01e3\25\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\1\u01e4\31\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\16\27\1\u01e5\13\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\15\27"+
    "\1\u01e6\14\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\13\27\1\u01e7\16\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\4\27\1\u01e8\25\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\21\27\1\u01e9\10\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\23\27\1\u01ea\6\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\10\27\1\u01eb"+
    "\21\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\15\27\1\u01ec\14\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\15\27\1\u01ed\14\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\21\27"+
    "\1\u01ee\10\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\4\27\1\u01ef\25\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\1\u01f0\31\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\10\27"+
    "\1\u01f1\21\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\4\27\1\u01f2\25\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\16\27\1\u01f3\13\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\23\27\1\u01f4\6\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\10\27\1\u01f5\21\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\15\27\1\u01f6"+
    "\14\27\2\0\24\27\1\0\1\66\5\0\1\62\2\0"+
    "\1\66\1\0\2\66\1\0\1\66\1\67\1\0\1\66"+
    "\4\0\21\27\1\u01f7\10\27\2\0\24\27\1\0\1\66"+
    "\5\0\1\62\2\0\1\66\1\0\2\66\1\0\1\66"+
    "\1\67\1\0\1\66\4\0\16\27\1\u01f8\13\27\2\0"+
    "\24\27\1\0\1\66\5\0\1\62\2\0\1\66\1\0"+
    "\2\66\1\0\1\66\1\67\1\0\1\66\4\0\4\27"+
    "\1\u01f9\25\27\2\0\24\27\1\0\1\66\5\0\1\62"+
    "\2\0\1\66\1\0\2\66\1\0\1\66\1\67\1\0"+
    "\1\66\4\0\16\27\1\u01fa\13\27\2\0\24\27\1\0"+
    "\1\66\5\0\1\62\2\0\1\66\1\0\2\66\1\0"+
    "\1\66\1\67\1\0\1\66\4\0\23\27\1\u01fb\6\27"+
    "\2\0\24\27\1\0\1\66\5\0\1\62\2\0\1\66"+
    "\1\0\2\66\1\0\1\66\1\67\1\0\1\66\4\0"+
    "\10\27\1\u01fc\21\27\2\0\24\27\1\0\1\66\5\0"+
    "\1\62\2\0\1\66\1\0\2\66\1\0\1\66\1\67"+
    "\1\0\1\66\4\0\4\27\1\u01fd\25\27\2\0\24\27"+
    "\1\0\1\66\5\0\1\62\2\0\1\66\1\0\2\66"+
    "\1\0\1\66\1\67\1\0\1\66\4\0\16\27\1\u01fe"+
    "\13\27\2\0\24\27\1\0\1\66\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[32163];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\1\1\0\1\11\4\1\1\11\1\1\1\0"+
    "\1\1\2\11\1\1\1\11\23\1\2\11\7\1\1\11"+
    "\1\1\2\11\4\1\1\11\1\1\1\0\55\1\1\0"+
    "\55\1\1\0\47\1\1\0\45\1\1\0\36\1\1\0"+
    "\2\1\1\0\32\1\1\0\33\1\1\0\30\1\1\0"+
    "\253\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[510];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  private boolean zzEOFDone;

  /* user code: */
    private Symbol symbol(int type, Object value){
        return new Symbol(type, yyline, yycolumn, value);
    }
    private Symbol symbol(int type){
        return new Symbol(type, yyline, yycolumn);
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    return ZZ_CMAP[input];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    
  yyclose();    }
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  @Override  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { /*Ignore*/
            }
            // fall through
          case 71: break;
          case 2:
            { return new Symbol(sym.COMILLAS, yycolumn, yyline, yytext());
            }
            // fall through
          case 72: break;
          case 3:
            { return new Symbol(sym.Contra,yycolumn,yyline,yytext());
            }
            // fall through
          case 73: break;
          case 4:
            { return new Symbol(sym.ID,yycolumn,yyline,yytext());
            }
            // fall through
          case 74: break;
          case 5:
            { return new Symbol(sym.Parentesis_a, yycolumn, yyline, yytext());
            }
            // fall through
          case 75: break;
          case 6:
            { return new Symbol(sym.Parentesis_c, yycolumn, yyline, yytext());
            }
            // fall through
          case 76: break;
          case 7:
            { return new Symbol(sym.COMA, yycolumn, yyline, yytext());
            }
            // fall through
          case 77: break;
          case 8:
            { return new Symbol(sym.Numero, yycolumn, yyline, yytext());
            }
            // fall through
          case 78: break;
          case 9:
            { return new Symbol(sym.DOSP, yycolumn, yyline, yytext());
            }
            // fall through
          case 79: break;
          case 10:
            { return new Symbol(sym.P_coma, yycolumn, yyline, yytext());
            }
            // fall through
          case 80: break;
          case 11:
            { return new Symbol(sym.MENORQ,yycolumn,yyline,yytext());
            }
            // fall through
          case 81: break;
          case 12:
            { return new Symbol(sym.MAYORQ,yycolumn,yyline,yytext());
            }
            // fall through
          case 82: break;
          case 13:
            { return new Symbol(sym.USUARIO,yycolumn,yyline,yytext());
            }
            // fall through
          case 83: break;
          case 14:
            { return new Symbol(sym.CORCHETEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 84: break;
          case 15:
            { return new Symbol(sym.CORCHETEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 85: break;
          case 16:
            { return new Symbol(sym.LLAVEA, yycolumn, yyline, yytext());
            }
            // fall through
          case 86: break;
          case 17:
            { return new Symbol(sym.OR,yycolumn,yyline,yytext());
            }
            // fall through
          case 87: break;
          case 18:
            { return new Symbol(sym.LLAVEC, yycolumn, yyline, yytext());
            }
            // fall through
          case 88: break;
          case 19:
            { return new Symbol(sym.FINE,yycolumn,yyline,yytext());
            }
            // fall through
          case 89: break;
          case 20:
            { return new Symbol(sym.TITULO, yycolumn, yyline, yytext());
            }
            // fall through
          case 90: break;
          case 21:
            { return new Symbol(sym.INICIOE,yycolumn,yyline,yytext());
            }
            // fall through
          case 91: break;
          case 22:
            { return new Symbol(sym.IDP,yycolumn,yyline,yytext());
            }
            // fall through
          case 92: break;
          case 23:
            { return new Symbol(sym.BOOL,yycolumn,yyline,yytext());
            }
            // fall through
          case 93: break;
          case 24:
            { return new Symbol(sym.URLC,yycolumn,yyline,yytext());
            }
            // fall through
          case 94: break;
          case 25:
            { return new Symbol(sym.TEMA,yycolumn,yyline,yytext());
            }
            // fall through
          case 95: break;
          case 26:
            { return new Symbol(sym.TEMAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 96: break;
          case 27:
            { return new Symbol(sym.CLASENORMAL,yycolumn,yyline,yytext());
            }
            // fall through
          case 97: break;
          case 28:
            { return new Symbol(sym.CLASE,yycolumn,yyline,yytext());
            }
            // fall through
          case 98: break;
          case 29:
            { return new Symbol(sym.CLASEOPCIONES,yycolumn,yyline,yytext());
            }
            // fall through
          case 99: break;
          case 30:
            { return new Symbol(sym.FILAS,yycolumn,yyline,yytext());
            }
            // fall through
          case 100: break;
          case 31:
            { return new Symbol(sym.ALINEA,yycolumn,yyline,yytext());
            }
            // fall through
          case 101: break;
          case 32:
            { return new Symbol(sym.CLASEIMAGEN,yycolumn,yyline,yytext());
            }
            // fall through
          case 102: break;
          case 33:
            { return new Symbol(sym.INDICEC,yycolumn,yyline,yytext());
            }
            // fall through
          case 103: break;
          case 34:
            { return new Symbol(sym.NOMBREP,yycolumn,yyline,yytext());
            }
            // fall through
          case 104: break;
          case 35:
            { return new Symbol(sym.TITULOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 105: break;
          case 36:
            { return new Symbol(sym.USUARIOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 106: break;
          case 37:
            { return new Symbol(sym.FECHA,yycolumn,yyline,yytext());
            }
            // fall through
          case 107: break;
          case 38:
            { return new Symbol(sym.URL, yycolumn,yyline,yytext());
            }
            // fall through
          case 108: break;
          case 39:
            { return new Symbol(sym.COLUMNAS,yycolumn,yyline,yytext());
            }
            // fall through
          case 109: break;
          case 40:
            { return new Symbol(sym.OPCIONES,yycolumn,yyline,yytext());
            }
            // fall through
          case 110: break;
          case 41:
            { return new Symbol(sym.CONTRAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 111: break;
          case 42:
            { return new Symbol(sym.REQUERIDO,yycolumn,yyline,yytext());
            }
            // fall through
          case 112: break;
          case 43:
            { return new Symbol(sym.ALINEAC,yycolumn,yyline,yytext());
            }
            // fall through
          case 113: break;
          case 44:
            { return new Symbol(sym.CLASEAREA,yycolumn,yyline,yytext());
            }
            // fall through
          case 114: break;
          case 45:
            { return new Symbol(sym.FORMULARIOC,yycolumn,yyline,yytext());
            }
            // fall through
          case 115: break;
          case 46:
            { return new Symbol(sym.NOMBREC,yycolumn,yyline,yytext());
            }
            // fall through
          case 116: break;
          case 47:
            { return new Symbol(sym.CREARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 117: break;
          case 48:
            { return new Symbol(sym.LOGINU,yycolumn,yyline,yytext());
            }
            // fall through
          case 118: break;
          case 49:
            { return new Symbol(sym.TEXTOVC,yycolumn,yyline,yytext());
            }
            // fall through
          case 119: break;
          case 50:
            { return new Symbol(sym.USUARIONP,yycolumn,yyline,yytext());
            }
            // fall through
          case 120: break;
          case 51:
            { return new Symbol(sym.FINS,yycolumn,yyline,yytext());
            }
            // fall through
          case 121: break;
          case 52:
            { return new Symbol(sym.INICIOS, yycolumn, yyline, yytext());
            }
            // fall through
          case 122: break;
          case 53:
            { return new Symbol(sym.FECHACP,yycolumn,yyline,yytext());
            }
            // fall through
          case 123: break;
          case 54:
            { return new Symbol(sym.NUEVOP,yycolumn,yyline,yytext());
            }
            // fall through
          case 124: break;
          case 55:
            { return new Symbol(sym.USUARIOAP,yycolumn,yyline,yytext());
            }
            // fall through
          case 125: break;
          case 56:
            { return new Symbol(sym.FINSOLICITUDES, yycolumn, yyline, yytext());
            }
            // fall through
          case 126: break;
          case 57:
            { return new Symbol(sym.SOLICITUDESP, yycolumn, yyline, yytext());
            }
            // fall through
          case 127: break;
          case 58:
            { return new Symbol(sym.ELIMINARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 128: break;
          case 59:
            { return new Symbol(sym.NUEVOFP,yycolumn,yyline,yytext());
            }
            // fall through
          case 129: break;
          case 60:
            { return new Symbol(sym.USUARIOCP,yycolumn,yyline,yytext());
            }
            // fall through
          case 130: break;
          case 61:
            { return new Symbol(sym.MODIFICARU,yycolumn,yyline,yytext());
            }
            // fall through
          case 131: break;
          case 62:
            { return new Symbol(sym.AGREGARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 132: break;
          case 63:
            { return new Symbol(sym.FECHAMP,yycolumn,yyline,yytext());
            }
            // fall through
          case 133: break;
          case 64:
            { return new Symbol(sym.ELIMINARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 134: break;
          case 65:
            { return new Symbol(sym.ELIMINARF,yycolumn,yyline,yytext());
            }
            // fall through
          case 135: break;
          case 66:
            { return new Symbol(sym.CREDENCIALES,yycolumn,yyline,yytext());
            }
            // fall through
          case 136: break;
          case 67:
            { return new Symbol(sym.MODIFICARC,yycolumn,yyline,yytext());
            }
            // fall through
          case 137: break;
          case 68:
            { return new Symbol(sym.MODIFICARF,yycolumn,yyline,yytext());
            }
            // fall through
          case 138: break;
          case 69:
            { return new Symbol(sym.PARAMC,yycolumn,yyline,yytext());
            }
            // fall through
          case 139: break;
          case 70:
            { return new Symbol(sym.PARAMF,yycolumn,yyline,yytext());
            }
            // fall through
          case 140: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
