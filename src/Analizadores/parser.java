
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\070\000\002\002\004\000\002\002\011\000\002\002" +
    "\003\000\002\006\004\000\002\006\003\000\002\003\012" +
    "\000\002\010\010\000\002\010\010\000\002\010\016\000" +
    "\002\010\010\000\002\010\010\000\002\010\010\000\002" +
    "\010\010\000\002\011\013\000\002\025\013\000\002\004" +
    "\005\000\002\004\003\000\002\017\005\000\002\017\003" +
    "\000\002\026\005\000\002\026\003\000\002\035\005\000" +
    "\002\035\003\000\002\036\003\000\002\036\003\000\002" +
    "\036\003\000\002\036\003\000\002\036\003\000\002\036" +
    "\003\000\002\027\003\000\002\027\003\000\002\027\003" +
    "\000\002\027\003\000\002\027\003\000\002\027\003\000" +
    "\002\020\003\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\034\011\000\002\016\005\000\002\016" +
    "\005\000\002\013\003\000\002\013\003\000\002\013\003" +
    "\000\002\012\011\000\002\033\011\000\002\021\011\000" +
    "\002\022\011\000\002\014\011\000\002\023\011\000\002" +
    "\015\011\000\002\024\011\000\002\030\011\000\002\031" +
    "\011\000\002\032\011" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\314\000\004\006\005\001\002\000\004\002\uffff\001" +
    "\002\000\006\052\010\062\011\001\002\000\004\002\007" +
    "\001\002\000\004\002\001\001\002\000\004\011\307\001" +
    "\002\000\004\007\012\001\002\000\004\005\013\001\002" +
    "\000\020\014\015\016\022\025\023\026\021\027\017\044" +
    "\014\054\016\001\002\000\004\005\153\001\002\000\004" +
    "\005\025\001\002\000\004\005\153\001\002\000\004\005" +
    "\153\001\002\000\004\012\147\001\002\000\004\005\025" +
    "\001\002\000\004\005\025\001\002\000\004\005\025\001" +
    "\002\000\004\005\036\001\002\000\004\011\026\001\002" +
    "\000\004\045\027\001\002\000\004\005\030\001\002\000" +
    "\004\104\031\001\002\000\004\005\032\001\002\000\004" +
    "\007\033\001\002\000\004\047\034\001\002\000\004\045" +
    "\035\001\002\000\004\005\ufff4\001\002\000\004\015\037" +
    "\001\002\000\004\005\040\001\002\000\004\007\041\001" +
    "\002\000\004\005\042\001\002\000\004\033\043\001\002" +
    "\000\004\005\044\001\002\000\004\046\045\001\002\000" +
    "\004\050\046\001\002\000\004\046\047\001\002\000\004" +
    "\012\ufff9\001\002\000\004\005\055\001\002\000\006\046" +
    "\uffde\064\uffde\001\002\000\006\046\uffdb\064\uffdb\001\002" +
    "\000\006\046\uffdd\064\uffdd\001\002\000\006\046\111\064" +
    "\110\001\002\000\012\017\060\020\063\021\061\024\062" +
    "\001\002\000\006\046\uffdc\064\uffdc\001\002\000\006\046" +
    "\uffef\064\uffef\001\002\000\004\005\103\001\002\000\004" +
    "\005\076\001\002\000\004\005\071\001\002\000\004\005" +
    "\064\001\002\000\004\007\065\001\002\000\004\005\066" +
    "\001\002\000\004\033\067\001\002\000\004\005\070\001" +
    "\002\000\006\046\uffd1\064\uffd1\001\002\000\004\007\072" +
    "\001\002\000\004\005\073\001\002\000\004\035\074\001" +
    "\002\000\004\005\075\001\002\000\006\046\uffcd\064\uffcd" +
    "\001\002\000\004\007\077\001\002\000\004\005\100\001" +
    "\002\000\004\033\101\001\002\000\004\005\102\001\002" +
    "\000\006\046\uffcf\064\uffcf\001\002\000\004\007\104\001" +
    "\002\000\004\005\105\001\002\000\004\033\106\001\002" +
    "\000\004\005\107\001\002\000\006\046\uffd2\064\uffd2\001" +
    "\002\000\004\005\055\001\002\000\004\050\112\001\002" +
    "\000\004\046\113\001\002\000\004\012\ufffa\001\002\000" +
    "\006\046\ufff0\064\ufff0\001\002\000\004\005\121\001\002" +
    "\000\004\064\144\001\002\000\004\064\141\001\002\000" +
    "\004\046\136\001\002\000\006\015\122\022\123\001\002" +
    "\000\004\005\131\001\002\000\004\005\124\001\002\000" +
    "\004\007\125\001\002\000\004\005\126\001\002\000\004" +
    "\033\127\001\002\000\004\005\130\001\002\000\006\046" +
    "\uffd0\064\uffd0\001\002\000\004\007\132\001\002\000\004" +
    "\005\133\001\002\000\004\033\134\001\002\000\004\005" +
    "\135\001\002\000\006\046\uffd4\064\uffd4\001\002\000\004" +
    "\050\137\001\002\000\004\046\140\001\002\000\004\012" +
    "\ufff8\001\002\000\004\005\143\001\002\000\004\046\uffd8" +
    "\001\002\000\004\015\122\001\002\000\004\005\146\001" +
    "\002\000\004\046\uffd9\001\002\000\004\022\123\001\002" +
    "\000\004\063\150\001\002\000\004\010\151\001\002\000" +
    "\006\002\ufffc\006\ufffc\001\002\000\004\005\172\001\002" +
    "\000\004\011\154\001\002\000\004\045\155\001\002\000" +
    "\004\005\156\001\002\000\004\055\157\001\002\000\004" +
    "\005\160\001\002\000\004\007\161\001\002\000\004\047" +
    "\162\001\002\000\004\045\163\001\002\000\004\005\ufff3" +
    "\001\002\000\006\046\uffe0\064\uffe0\001\002\000\006\046" +
    "\uffdf\064\uffdf\001\002\000\006\046\uffe3\064\uffe3\001\002" +
    "\000\006\046\uffe4\064\uffe4\001\002\000\006\046\uffed\064" +
    "\uffed\001\002\000\006\046\242\064\241\001\002\000\016" +
    "\023\202\036\200\037\175\040\176\041\177\042\201\001" +
    "\002\000\006\046\uffe2\064\uffe2\001\002\000\006\046\uffe1" +
    "\064\uffe1\001\002\000\004\005\234\001\002\000\004\005" +
    "\227\001\002\000\004\005\222\001\002\000\004\005\215" +
    "\001\002\000\004\005\210\001\002\000\004\005\203\001" +
    "\002\000\004\007\204\001\002\000\004\005\205\001\002" +
    "\000\004\035\206\001\002\000\004\005\207\001\002\000" +
    "\006\046\uffce\064\uffce\001\002\000\004\007\211\001\002" +
    "\000\004\005\212\001\002\000\004\033\213\001\002\000" +
    "\004\005\214\001\002\000\006\046\uffd3\064\uffd3\001\002" +
    "\000\004\007\216\001\002\000\004\005\217\001\002\000" +
    "\004\065\220\001\002\000\004\005\221\001\002\000\006" +
    "\046\uffcc\064\uffcc\001\002\000\004\007\223\001\002\000" +
    "\004\005\224\001\002\000\004\043\225\001\002\000\004" +
    "\005\226\001\002\000\006\046\uffda\064\uffda\001\002\000" +
    "\004\007\230\001\002\000\004\005\231\001\002\000\004" +
    "\033\232\001\002\000\004\005\233\001\002\000\006\046" +
    "\uffca\064\uffca\001\002\000\004\007\235\001\002\000\004" +
    "\005\236\001\002\000\004\030\237\001\002\000\004\005" +
    "\240\001\002\000\006\046\uffcb\064\uffcb\001\002\000\004" +
    "\005\172\001\002\000\004\050\243\001\002\000\004\046" +
    "\244\001\002\000\004\012\ufff7\001\002\000\006\046\uffee" +
    "\064\uffee\001\002\000\004\005\255\001\002\000\006\046" +
    "\uffe6\064\uffe6\001\002\000\006\046\uffe5\064\uffe5\001\002" +
    "\000\006\046\uffe9\064\uffe9\001\002\000\006\046\uffeb\064" +
    "\uffeb\001\002\000\006\046\uffea\064\uffea\001\002\000\006" +
    "\046\261\064\260\001\002\000\016\024\062\036\200\037" +
    "\175\040\176\041\177\042\201\001\002\000\006\046\uffe8" +
    "\064\uffe8\001\002\000\006\046\uffe7\064\uffe7\001\002\000" +
    "\004\005\255\001\002\000\004\050\262\001\002\000\004" +
    "\046\263\001\002\000\004\012\ufff5\001\002\000\006\046" +
    "\uffec\064\uffec\001\002\000\004\005\273\001\002\000\006" +
    "\046\ufff1\064\ufff1\001\002\000\006\046\uffd7\064\uffd7\001" +
    "\002\000\006\046\uffd6\064\uffd6\001\002\000\006\046\uffd5" +
    "\064\uffd5\001\002\000\006\046\275\064\274\001\002\000" +
    "\010\015\122\022\123\023\202\001\002\000\004\005\273" +
    "\001\002\000\004\050\276\001\002\000\004\046\277\001" +
    "\002\000\004\012\ufffb\001\002\000\006\046\ufff2\064\ufff2" +
    "\001\002\000\004\005\302\001\002\000\004\036\200\001" +
    "\002\000\004\046\304\001\002\000\004\050\305\001\002" +
    "\000\004\046\306\001\002\000\004\012\ufff6\001\002\000" +
    "\004\006\312\001\002\000\004\006\314\001\002\000\004" +
    "\006\ufffd\001\002\000\004\062\011\001\002\000\004\006" +
    "\ufffe\001\002\000\006\053\315\062\011\001\002\000\004" +
    "\011\316\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\314\000\006\002\005\003\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\010\017\001\001\000\004\025\300\001\001\000\004" +
    "\011\264\001\001\000\004\025\245\001\001\000\004\025" +
    "\151\001\001\000\002\001\001\000\004\011\114\001\001" +
    "\000\004\011\047\001\001\000\004\011\023\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\017\053\020\056\021\050\022\052\023\055" +
    "\024\051\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\020\113\021\050\022\052\023\055\024\051\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\012\115\014\116\016\117\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\012" +
    "\141\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\144\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\015\164\026\170\027\167\030\166\031\165\032\172\033" +
    "\163\034\173\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\015\164\027\244\030\166\031\165\032\172\033" +
    "\163\034\173\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\022\024\247\030" +
    "\252\031\250\032\255\033\246\034\256\035\253\036\251" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\024\247\030\252\031\250\032\255\033\246\034\256" +
    "\036\263\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\004\271\012\266" +
    "\013\265\014\267\015\270\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\266\013\277\014" +
    "\267\015\270\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\030\302\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\003\310\006" +
    "\307\001\001\000\004\003\312\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    
    public Symbol getS(){
        return this.sym;
    }

    public void report_fatal_error(String message, Object info) {
        System.out.println("reportfatal "+message+info);
    }
    public void report_fatal_error(Symbol cur) {
        System.out.println("unrecovered_syntax_error");
    }

    public void syntax_error(Symbol cur_token) {
        System.out.println(symbl_name_from_id(expected_token_ids().get(0)));
        System.out.println("syntaxerr: " + symbl_name_from_id(cur_token.sym) +" Linea: "+cur_token.right+" Columna: "+cur_token.left+" Valor:"+cur_token.value);
    }

    protected int error_sync_size() {
        return 1;
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= inicio EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // inicio ::= INICIOE SOLICITUDESP MAYORQ bloque_solicitudes INICIOE FINSOLICITUDES MAYORQ 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // inicio ::= solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // bloque_solicitudes ::= bloque_solicitudes solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_solicitudes",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // bloque_solicitudes ::= solicitud 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_solicitudes",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // solicitud ::= INICIOE INICIOS DOSP COMILLAS tipo_solicitud MENORQ FINS FINE 
            {
              Object RESULT =null;
		System.out.println("encontrada solicitud");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("solicitud",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // tipo_solicitud ::= CREARU inicio_param_usuario bloque_usuario1 LLAVEC CORCHETEC LLAVEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // tipo_solicitud ::= MODIFICARU inicio_param_usuario bloque_usuario2 LLAVEC CORCHETEC LLAVEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // tipo_solicitud ::= ELIMINARU inicio_param_usuario COMILLAS USUARIOP COMILLAS DOSP COMILLAS USUARIO COMILLAS LLAVEC CORCHETEC LLAVEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // tipo_solicitud ::= LOGINU inicio_param_usuario parametro_login LLAVEC CORCHETEC LLAVEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // tipo_solicitud ::= NUEVOFP inicio_param_formulario bloque_formulario1 LLAVEC CORCHETEC LLAVEC 
            {
              Object RESULT =null;
		System.out.println("Encontrada solicitud formulario nuevo");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // tipo_solicitud ::= ELIMINARF inicio_param_formulario parametro_id LLAVEC CORCHETEC LLAVEC 
            {
              Object RESULT =null;
		System.out.println("Encontrada solicitud eliminación de formulario");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // tipo_solicitud ::= MODIFICARF inicio_param_formulario bloque_formulario2 LLAVEC CORCHETEC LLAVEC 
            {
              Object RESULT =null;
		System.out.println("Encontrada solicitud modificación formulario");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("tipo_solicitud",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // inicio_param_usuario ::= COMILLAS MAYORQ LLAVEA COMILLAS CREDENCIALES COMILLAS DOSP CORCHETEA LLAVEA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_param_usuario",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // inicio_param_formulario ::= COMILLAS MAYORQ LLAVEA COMILLAS PARAMF COMILLAS DOSP CORCHETEA LLAVEA 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("inicio_param_formulario",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // bloque_usuario1 ::= bloque_usuario1 COMA parametros_crear 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_usuario1",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // bloque_usuario1 ::= parametros_crear 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_usuario1",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // bloque_usuario2 ::= bloque_usuario2 COMA parametros_modificarU 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_usuario2",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // bloque_usuario2 ::= parametros_modificarU 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_usuario2",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // bloque_formulario1 ::= bloque_formulario1 COMA parametros_formulario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_formulario1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // bloque_formulario1 ::= parametros_formulario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_formulario1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // bloque_formulario2 ::= bloque_formulario2 COMA parametros_formulario2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_formulario2",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // bloque_formulario2 ::= parametros_formulario2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("bloque_formulario2",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // parametros_formulario2 ::= parametro_id 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // parametros_formulario2 ::= parametro_titulo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // parametros_formulario2 ::= parametro_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // parametros_formulario2 ::= parametro_tema 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // parametros_formulario2 ::= parametro_usuario_creacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // parametros_formulario2 ::= parametro_fecha_modificacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario2",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // parametros_formulario ::= parametro_id 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // parametros_formulario ::= parametro_titulo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // parametros_formulario ::= parametro_nombre 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // parametros_formulario ::= parametro_tema 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // parametros_formulario ::= parametro_usuario_creacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // parametros_formulario ::= parametro_fecha 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_formulario",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // parametros_modificarU ::= parametro_usuario_antiguo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificarU",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // parametros_modificarU ::= parametro_usuario_nuevo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificarU",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // parametros_modificarU ::= parametro_contra_nueva 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificarU",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // parametros_modificarU ::= parametro_fecha_modificacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_modificarU",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // parametro_tema ::= COMILLAS TEMAP COMILLAS DOSP COMILLAS TEMA COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_tema",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // parametro_login ::= parametro_usuario COMA parametro_contra 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_login",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // parametro_login ::= parametro_contra COMA parametro_usuario 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_login",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // parametros_crear ::= parametro_usuario 
            {
              Object RESULT =null;
		System.out.println("encontrado parametro usuario");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // parametros_crear ::= parametro_contra 
            {
              Object RESULT =null;
		System.out.println("encontrado parametro contraseña");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // parametros_crear ::= parametro_fecha 
            {
              Object RESULT =null;
		System.out.println("encontrado parametro fecha");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametros_crear",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // parametro_usuario ::= COMILLAS USUARIOP COMILLAS DOSP COMILLAS USUARIO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // parametro_usuario_creacion ::= COMILLAS USUARIOCP COMILLAS DOSP COMILLAS USUARIO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_creacion",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // parametro_usuario_antiguo ::= COMILLAS USUARIOAP COMILLAS DOSP COMILLAS USUARIO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_antiguo",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // parametro_usuario_nuevo ::= COMILLAS USUARIONP COMILLAS DOSP COMILLAS USUARIO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_usuario_nuevo",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // parametro_contra ::= COMILLAS CONTRAP COMILLAS DOSP COMILLAS USUARIO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_contra",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // parametro_contra_nueva ::= COMILLAS NUEVOP COMILLAS DOSP COMILLAS USUARIO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_contra_nueva",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // parametro_fecha ::= COMILLAS FECHACP COMILLAS DOSP COMILLAS FECHA COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_fecha",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // parametro_fecha_modificacion ::= COMILLAS FECHAMP COMILLAS DOSP COMILLAS FECHA COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_fecha_modificacion",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // parametro_id ::= COMILLAS IDP COMILLAS DOSP COMILLAS ID COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_id",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // parametro_titulo ::= COMILLAS TITULOP COMILLAS DOSP COMILLAS TITULO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_titulo",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // parametro_nombre ::= COMILLAS NOMBREP COMILLAS DOSP COMILLAS USUARIO COMILLAS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("parametro_nombre",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
